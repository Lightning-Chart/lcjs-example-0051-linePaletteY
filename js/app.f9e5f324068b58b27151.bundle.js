(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,l)=>{const s=l(377),{lightningChart:a,PalettedFill:n,LUT:o,ColorRGBA:i,SolidFill:r,emptyFill:d,Themes:h}=s,c=a({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).ChartXY({legend:{visible:!1},theme:h[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setTitle("Line Chart with dynamic good/bad values highlighting"),u=-3e4,S=i(255,0,0),g=i(0,255,0),y=(c.getDefaultAxisX(),c.getDefaultAxisY());y.addConstantLine().setPointerEvents(!1).setValue(u).setStrokeStyle(e=>e.setFillStyle(new r({color:S.setA(50)}))),y.addConstantLine().setPointerEvents(!1).setValue(1e4).setStrokeStyle(e=>e.setFillStyle(new r({color:g.setA(50)}))),fetch(new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"examples/assets/0051/data.json").then(e=>e.json()).then(e=>{const t=c.addLineSeries().appendSamples({yValues:e}),l=t.getStrokeStyle().getFillStyle().getColor(),s=t.getYMin(),a=new n({lookUpProperty:"y",lut:new o({interpolate:!1,steps:[{value:s,color:S},{value:u,color:l},{value:1e4,color:g}]})});t.setStrokeStyle(e=>e.setFillStyle(a)),y.setStrokeStyle(e=>e.setFillStyle(a))})}},e=>{e.O(0,[502],()=>e(e.s=44)),e.O()}]);